apply plugin: 'com.android.application'
apply plugin: 'channel'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion "27.0.3"

    defaultConfig {
        applicationId "com.multichannel"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 2
        versionName "2.2.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    signingConfigs {
        release {
            //加载资源
            Properties properties = new Properties()
            InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream() ;
            properties.load( inputStream )

            //读取文件
            def sdkDir = properties.getProperty('key.file')
            storeFile file(sdkDir)

            //读取字段
            def key_keyAlias = properties.getProperty( 'keyAlias' )
            def key_keyPassword = properties.getProperty( 'keyPassword' ) ;
            def key_storePassword = properties.getProperty( 'storePassword' ) ;

            storePassword key_storePassword
            keyAlias key_keyAlias
            keyPassword key_keyPassword

            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    channel{
        //指定渠道文件
        channelFile = file("../channel.txt")
        //多渠道包的输出目录，默认为new File(project.buildDir,"channel")
        baseOutputDir = new File(project.buildDir,"channel")
        //多渠道包的命名规则，默认为：${appName}-${versionName}-${versionCode}-${flavorName}-${buildType}
        apkNameFormat ='${appName}-${versionName}-${versionCode}-${flavorName}-${buildType}'
        //快速模式：生成渠道包时不进行校验（速度可以提升10倍以上）
        isFastMode = true
    }

    rebuildChannel {
        //指定渠道文件
        channelFile = channelFile = file("../channel.txt")
        baseDebugApk = file("D:\\AndroidWorkPlace\\MultiPackage\\app\\build\\outputs\\apk\\debug\\app-debug.apk")
        baseReleaseApk = file("D:\\AndroidWorkPlace\\MultiPackage\\app\\build\\outputs\\apk\\release\\app-release.apk")
        //默认为new File(project.buildDir, "rebuildChannel/debug")
        //debugOutputDir = Debug渠道包输出目录
        //默认为new File(project.buildDir, "rebuildChannel/release")
        //releaseOutputDir = Release渠道包输出目录
        //快速模式：生成渠道包时不进行校验（速度可以提升10倍以上，默认为false）
        isFastMode = false
        //低内存模式（仅针对V2签名，默认为false）：只把签名块、中央目录和EOCD读取到内存，不把最大头的内容块读取到内存，在手机上合成APK时，可以使用该模式
        lowMemory = false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile rootProject.ext.dependencies["appcompat-v7"]
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    api 'com.leon.channel:helper:1.1.7'
    compile 'com.blankj:utilcode:1.17.3'
}
